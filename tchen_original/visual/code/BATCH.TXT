~lnspet/tlong/save/code/BATCH.txt  rev. 8/18/98

List of codes for generating shell script to run sim1 for multi-cases

All source codes and input files are in helix's /home/horwitz/theresa/code.
All executables are in helix's /home/horwitz/theresa/bin.
~lnspet/tlong/save/code on alw has an identical copy of the code directory
/u1/optic/fmri/code on freud has an identical copy of the helix code directory
/u1/optic/fmri/bin on freud has an identical copy of the helix bin directory


CASE		 	SHELL SCRIPT 	INPUT PARAM.	OUTPUT
			GENERATOR	FILE 		FILE

right side only		mkbatchr	mkbatchr.in	batchr
form input

right side only		mkbatchrn	mkbatchrn.in	batchrn
random noise input

right side only		r2batch		r2batch.in	batchr2
two paths

right side only		alzbatchr	alzbatchr.in	batchalz
alzheimer

left side only		mkbatchl	mkbatchl.in	batchl (that's el)
form input

left side only		mkbatchln	mkbatchln.in	batchln	(that's el)
random noise input

both sides		mkbatch		mkbatch.in	batch0
right-form input
left-ran. noise input

same as above, but	mkbatchw	mkbatchw.in	batchw
with weakened connections

both sides		mkbatchn	mkbatchn.in	batchn
right-ran. noise input
left-ran. noise input

same as above, but	mkbatchnw	mkbatchnw.in	batchnw
with weakened connections

both sides		mkbatchd	mkbatchd.in	batchd
right-degraded input
left-ran. noise input

same as above, but	mkbatchdw	mkbatchdw.in	batchdw
with weakened connection



COMPILING THE GENERARTOR
The source code for the generator has the same name lpus a .cc suffix.
To recompile, for example, mkbatch, cd to the "code" directory, then
>/usr/ccs/bin/make  mkbatch
If we have the "/usr/ccs/bin" path in .cshrc, we can just type
>make mkbatch




INPUT FILES for generating the batch run shell script

- One hemisphere 
  Enter parameters in the input file listed in column 4. 

- Two hemispheres with cross hemisphere connection
  Enter parameters in the input file listed in column 4.

  For example, the input file for mkbatch is mkbatch.in.  We can enter

	1. attention levels of subject
	2. option for a single subject  which has fixed connectivity for all 
		tasks (FMRI), or different subject (different connectivity)
		for each task(PET).  The single subject option is available for
		all cases except the weakened connectivity and alzheimer
		disease because there is no fixed connectivity when we
		are varying the connectivity for weakened strength and varying
		the sick neuron population for the alzheimer disease.
		Will write a code in the future to run tasks for single sick
		subject.
	3. number of "lit" blocks in the visual input matrix
	4. seed for randomly picking the "lit" blocks
	5. output file destination

  Additionally, we need to enter parameters in the crossws.in and crosswt_i.in
  input files.  crossws.in specifies the fanout, sparsity,weights and noise of
  cross brain connection.  crosswt_i.in specifies % of regions for cross
  connection, we can also specify exactly what regions should be connected.
  These two input files have appropriate values set.  Unless there is a 
  change in design, should leave these two files alone.

  For the special cases of weakened connections, enter the connections we 
  want to weaken in the file genw.in.  The batch generator will call genw 
  which looks at genw.in and generate appropriate files for netgen.  
  Similarly, if we want to do the alzheimer case, we need to fill in the 
  parameters in the file alz.in which states the percentage of sick neurons 
  and how sick they are.

  Each input file  contains a section explaining the input parameters


SHELL SCRIPT BATCH FILE

We are running sim1 on both churn and freud.  
If on freud, the working directory is /u1/optic/fmri
If on churn, the working directory is /home/horwitz/theresa

To make the shell script file for the mkbatch case, go to the code directory. 
If ">" is the system prompt:
>mkbatch
A shell script called "batch0" is produced.  Note, do not use
the word "batch", which is a system call.  To run batch0, move batch0 out of 
code to the directory above code then use chmod to make it an executable.

> mv batch0 ..
> cd ..
> chmod u+x batch0
> batch0

Each time we want to run a batch script, we must generate it.  Do not reuse
previous batch script.  This is because the batch script will look
for a file called app which is generated at the time the batch script
is generated, and deleted in the end of a batch run.  Therefore we need to
regenerate the batch script.  The deletion has two purposes: to minimize
cluttering the directory, and to give the user a chance to check the 
generator's input file as part of regenerating the script.
The output of the batch runs is always in the directory noisy.  At the end of
the batch, we rename noisy and move it to a specified destination.

For the case when the two hemispheres are connected, it is recommended to run
the batch on churn to take advantage of its speed and space in its scratch
disk. The huge amount of .w files and .out files takes up 50 Mbytes requires
diligent disk spave management. At the end of the batch.


A WORD ABOUT HELIX AND CHURN

helix and churn share the same hard disk, so we can not run identical jobs on
both computers.  The output of one job will write over the other.
Each computer has its own scratch disk. The scratch disks are not transparent,
i.e. we can only access helix scratch from helix, and churn scratch from churn.
The scratch directory we have on helix is /scratch/theresa/. On churn, it is 
/scratch/theresa_churn. Any 7-day old files on scratch will be deleted by the
system administrator. 

Since churn runs twice as fast as helix, we run the batch job on churn.  The 
output files are moved to churn's scratch disk automatically.  To consolidate
all test data in helix scratch disk, we need to move data from churn's scratch
disk to churn's main disk, then get on helix, and move test data from main
disk to helix's scratch disk.


PORTING CODES and INPUT FILES to a different computer

All the codes specifies where the "BASE" directory is so that any file movement
is with respect to this reference BASE.  All the input file specifies where
the output data destination. Additionally, the makefiles specifies where the
executable should reside.  When we port them to a different computer, these
addresses ought to be changed. To change the BASE definition, edit the
file "changeC.in.  Fill in the "change from" line and the "change to"
line. Then type at the prompt, change c. This will change all the BASE
definition in all the source codes.  To change the "destination" definition,
edit the file "changeIN.in",  Fill in the "change from" line and the 
"change to" line. Then type at the prompt, change in. This will change all 
the destination definition in all the input files.

-----------------------------------------
5/19/2000

1. wrote fMRI.cc to generate a shell script fmri.sh, which can
   be used to run fmri tests

   fMRI.cc is in helix's /home/horwitz/theresa_hold/code/
   input to fMRI.cc is fMRI.in + command line input
   output file is fmri.sh

   To compile:
      go to the code directory, then type
      make fmri

      the executable goes to /home/horwitz/theresa_hold/bin

   to run fmri
      stay in the code directory, tpye
      ../bin/fmri x y z
      where:
        x = cross_select_seed, it is the random number
            generator seed for picking which of
            the cross connections exists
        y = ggnseed, it is the random number
            generator seed for picking which of the input
            pixel will be lit
         if x or y is 0, system clock will be used for that seed

        z = perl_seed, 
            if no entry for z , Fatima's perl script for changing 
            random number generator for scaling bias of the weight
            is not called

    The input file for fMRI.cc is fMRI.in.  It has the same format as
    mkbatchw.in.  However, I have added a nsubj parameter,  which 
    is not used right now.  I am using it as a place holder for 
    future versions when we want to have block tests.

    Edit fMRI.in to get the desired attention level, 
    and the weakening degrees fro connection strength. 

    The output of fmri is the shell script fmri.sh.  
    move it above the code directory to run. 
    before you run fmri.sh, (you are now in /home/horwitz) type 
         chmod +x fmri.sh

    to run the script, type
         fmri.sh

2. changed crosswt_i.cc so that the cross_select_seed is now a
   command line entry , and not to be read from the input file.

3. Aside from fRMI.cc, I have not changed other shell script.
   generators such as *batch*.cc. They also call crosswt_i.cc.
   Since I changed crosswt_i.cc to accomodate the seed
   selection in fMRI.cc, if you try to run them from 
   ~/theresa/code directory, there will be inconsistency.
   you cn  still run the old version of crosswt_i from 
   barrysim/code.

4. I will change other shell script generators when needed.
------------------------------------------------

